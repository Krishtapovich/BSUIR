//---------------------------------------------------------------------------
#include <vcl.h>
#include <windows.h>
#include <fstream>
#include <string>
#pragma hdrstop
#include "Firm.h"
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
Firm *firm;
int size;
void Reading();
void ShowInfo();
bool Compare(std::string, std::string);
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner):TForm(Owner){Memo1->Lines->Clear();}
//---------------------------------------------------------------------------
void Reading()
{
	if(Form1->OpenDialog1->Execute())
	{
		size = 0;
		ifstream fin(Form1->OpenDialog1->FileName.c_str());
		while(!fin.eof())
		{
			std::string s;
			getline(fin, s);
			size++;
		}
		fin.seekg(0);
		firm = new Firm[size];

		for (int i = 0; i < size; i++)
		{
		   fin >> firm[i].name >> firm[i].project >> firm[i].task >>
		   firm[i].execute_date >> firm[i].start_date >> firm[i].end_date;
		   Form1->ComboBox1->Items->Add(i+1);
		}
		fin.close();
		Form1->Edit1->Enabled = True;
		Form1->Edit2->Enabled = True;
		Form1->Edit3->Enabled = True;
		Form1->DateTimePicker1->Enabled = True;
		Form1->DateTimePicker2->Enabled = True;
		Form1->DateTimePicker3->Enabled = True;
		Form1->ComboBox1->Enabled = True;
		Form1->Button2->Enabled = True;
		Form1->Button3->Enabled = True;
		Form1->Button4->Enabled = True;
		Form1->Button5->Enabled = True;
		Form1->Button6->Enabled = True;
	}
}
//--------------------------------------------------------------------------
 void ShowInfo()
 {
	Form1->Memo1->Lines->Clear();
	for (int i = 0; i < size; i++)
	{
		AnsiString str = IntToStr(i+1) + ".  " + firm[i].name.c_str() + "    " + firm[i].project.c_str() + "    " +
		IntToStr(firm[i].task) + "    " + firm[i].execute_date.c_str() + "    " + firm[i].start_date.c_str() + "    " + firm[i].end_date.c_str();
		Form1->Memo1->Lines->Add(str);
	}
}
//--------------------------------------------------------------------------
bool Compare(std::string a, std::string b)
{
	TDateTime dt1;
	TDateTime dt2;
	TFormatSettings fs;
	fs.DateSeparator = '.';
	fs.LongDateFormat = "YYYY-MM-DD";
	fs.ShortDateFormat = "YYYY-MM-DD";
	if(TryStrToDateTime(a.c_str(), dt1, fs) && TryStrToDateTime(b.c_str(), dt2, fs))
	{
		if(dt1 > dt2)return 1;
		else return false;
    }
}
//--------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	Reading();
	ShowInfo();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	ShowInfo();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	if(Edit1->Text != "" && Edit2->Text != "" && Edit3->Text != "" && Form1->ComboBox1->ItemIndex != -1)
	{
		int index = Form1->ComboBox1->ItemIndex;
		AnsiString str = Edit1->Text;
		firm[index].name = str.c_str();
		str = Edit2->Text;
		firm[index].project = str.c_str();
		firm[index].task = StrToInt(Edit3->Text);
		str = DateToStr(DateTimePicker1->Date);
		firm[index].execute_date = str.c_str();
		str = DateToStr(DateTimePicker2->Date);
		firm[index].start_date = str.c_str();
		str = DateToStr(DateTimePicker3->Date);
		firm[index].end_date = str.c_str();
		ShowInfo();
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
	if(Form1->Edit1->Text != "" && Form1->Edit2->Text != "" && Form1->Edit3->Text != "")
	{
		Firm* arr = new Firm[size + 1];
		for(int i = 0; i < size; i++) arr[i] = firm[i];
		AnsiString str = Form1->Edit1->Text;
		arr[size].name = str.c_str();
		str = Form1->Edit2->Text;
		arr[size].project = str.c_str();
		arr[size].task = StrToInt(Form1->Edit3->Text);
		str = DateToStr(Form1->DateTimePicker1->Date);
		arr[size].execute_date = str.c_str();
		str = DateToStr(Form1->DateTimePicker2->Date);
		arr[size].start_date = str.c_str();
		str = DateToStr(Form1->DateTimePicker3->Date);
		arr[size].end_date = str.c_str();
		firm = arr;
		size++;
		ShowInfo();
		Form1->ComboBox1->Items->Add(size);
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button4Click(TObject *Sender)
{
	if(Form1->ComboBox1->ItemIndex != -1)
	{
		size--;
		Firm* arr = new Firm[size];
		int del = Form1->ComboBox1->ItemIndex;
		for(int i = 0; i < del; i++) arr[i] = firm[i];
		for(int i = del; i < size ; i++) arr[i] = firm[i + 1];
		firm = arr;
		ShowInfo();
		Form1->ComboBox1->DeleteSelected();
		for(int i = 0; i < size; i++)
		{
			UnicodeString s = IntToStr(i + 1);
			Form1->ComboBox1->Items->Strings[i] = s;
		}
	}
}
//---------------------------------------------------------------------------


