//---------------------------------------------------------------------------
#include <vcl.h>
#include <cmath>
#pragma hdrstop

#include "Unit1.h"
#include "StackNum.h"
#include "StackOp.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
StackNum *stkNum = new StackNum();
StackOp *stkOp = new StackOp();

bool is_space(char c)
{
	return c == ' ';
}

bool is_op(char c)
{
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int priority(char c)
{
	if(c == '+' || c == '-') return 1;
	else if(c == '*' || c == '/')return 2;
	else return 0;
}

void Step(char c)
{
	float a = stkNum->Delete();
	float b = stkNum->Delete();
	switch(c)
	{
		case '+': stkNum->Add(b + a); break;
		case '-': stkNum->Add(b - a); break;
		case '*': stkNum->Add(b * a); break;
		case '/': stkNum->Add(b / a); break;
	}
}

//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner) : TForm(Owner){}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	try
	{
		float nums[5];
		nums[0] = StrToFloat(Edit1->Text);
		nums[1] = StrToFloat(Edit2->Text);
		nums[2] = StrToFloat(Edit3->Text);
		nums[3] = StrToFloat(Edit4->Text);
		nums[4] = StrToFloat(Edit5->Text);
		AnsiString temp = Edit8->Text;
		std::string node = temp.c_str();
		int j = 0;
		for(int i = 0; node[i] != '\0'; i++)
		{
			if(!is_space(node[i])) if(node[i] == '(') stkOp->Add('(');

			else if(node[i] == ')')
			{
				while(stkOp->GetBack() != '(') Step(stkOp->GetBack()), stkOp->Delete();
				stkOp->Delete();
			}
			else if(is_op(node[i]))
			{
			   char c = node[i];
			   while(stkOp->size != 0 && priority(stkOp->GetBack()) >= priority(node[i])) Step(stkOp->GetBack()), stkOp->Delete();
			   stkOp->Add(c);
			}
			else stkNum->Add(nums[j++]);
		}

		while(stkOp->size != 0) Step(stkOp->GetBack()), stkOp->Delete();
		Edit6->Text = FloatToStr(round(stkNum->GetBack() * 1000) / 1000);
	}
	catch(...)
	{
		ShowMessage("¬ведите корректные данные!");
		Edit1->Text = "";
		Edit2->Text = "";
		Edit3->Text = "";
		Edit4->Text = "";
		Edit5->Text = "";
	}
}
//---------------------------------------------------------------------------
