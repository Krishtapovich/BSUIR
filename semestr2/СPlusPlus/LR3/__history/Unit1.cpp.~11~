//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop
#include "List.h"
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
List *lst = new List();
int size = 0;
void Lock()
{
	Form1->Button1->Enabled = False;
	Form1->Button3->Enabled = False;
	Form1->Button4->Enabled = False;
}
void UnLock()
{
	Form1->Button1->Enabled = True;
	Form1->Button3->Enabled = True;
	Form1->Button4->Enabled = True;
}
void CleanEdits()

{
	Form1->Edit1->Text = "";
	Form1->Edit2->Text = "";
	Form1->Edit3->Text = "";
	Form1->Edit4->Text = "";
	Form1->Edit5->Text = "";
	Form1->Edit6->Text = "";
	Form1->Edit7->Text = "";
}
AnsiString ShowNode(int index)
{
	AnsiString str = lst->Country(index).c_str();
	str = str + "    " + lst->Team(index).c_str() + "    " +
	lst->Surname(index).c_str() + "    " + IntToStr(lst->Num(index)) + "    " + IntToStr(lst->Age(index)) + "    " +
	IntToStr(lst->Height(index)) + "    " + IntToStr(lst->Weight(index));
	return str;
}
void ShowList()
{
    Form1->Memo1->Lines->Clear();
	for (int i = 0; i < size; i++)
	{
		AnsiString str = IntToStr(i + 1) + ". " +ShowNode(i);
		Form1->Memo1->Lines->Add(str);
	}
}
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner) :TForm(Owner) {Memo1->Lines->Clear();}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
	AnsiString s;
	std::string country, team, surname;
	if(Edit1->Text == "")
	{
		ShowMessage("¬ведите название страны!");
		Edit1->Text = "";
	}else
	{
		s = Edit1->Text;
		country = s.c_str();
	}
	if(Edit2->Text == "")
	{
		ShowMessage("¬ведите название команды!");
		Edit2->Text = "";
	}else
	{
		s = Edit2->Text;
		team = s.c_str();
	}
	if(Edit3->Text == "")
	{
		ShowMessage("¬ведите фамилию!");
		Edit3->Text = "";
	}else
	{
		s = Edit3->Text;
		surname = s.c_str();
	}
	int num, age, height, weight;
	try
	{
		num = StrToInt(Edit4->Text);
		if(num <= 0)
		{
			ShowMessage("¬ведите корректный номер!");
			Edit4->Text = "";
		}
	}
	catch(...)
	{
		ShowMessage("¬ведите корректный номер!");
		Edit4->Text = "";
	}

	try
	{
		age = StrToInt(Edit5->Text);
		if(age <= 0)
		{
			ShowMessage("¬ведите корректный возраст!");
			Edit5->Text = "";
		}
	}
	catch(...)
	{
		ShowMessage("¬ведите корректный возраст!");
		Edit5->Text = "";
	}

	try
	{
		height = StrToInt(Edit6->Text);
		if(height <= 0)
		{
			ShowMessage("¬ведите корректный рост!");
			Edit6->Text = "";
		}
	}
	catch(...)
	{
		ShowMessage("¬ведите корректный рост!");
		Edit6->Text = "";
	}

	try
	{
		weight = StrToInt(Edit7->Text);
		if(weight <= 0)
		{
			ShowMessage("¬ведите корректный вес!");
			Edit7->Text = "";
		}
	}
	catch(...)
	{
		ShowMessage("¬ведите корректный вес!");
		Edit7->Text = "";
	}
	if(country != "" && team != "" && surname != "" && age != 0 && height!= 0 && weight != 0)
	{
		lst->Add(country, team, surname, num, age, height, weight);
		size++;
		ComboBox1->Items->Add(size);
		ShowList();
	}
	if(size != 0)UnLock();
	CleanEdits();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	Form1->Memo1->Lines->Clear();
	if(Form1->Edit3->Text != "" && Form1->Edit6->Text == "" && Form1->Edit7->Text == "")
	{
		int count = 0;
		AnsiString s = Form1->Edit3->Text;
		std::string str =s.c_str();
		for(int i = 0; i < size; i++)
		{
			if(lst->Surname(i) == str)
			{
				Form1->Memo1->Lines->Add(ShowNode(i));
				count++;
			}
		}
		if(count == 0)ShowMessage("”частника с такой фамилией нет в таблице!");
	}
	else if(Form1->Edit3->Text == "" && Form1->Edit7->Text != "" && Form1->Edit6->Text == "")
	{
		int w, count = 0;
		try
		{
			w = StrToInt(Edit7->Text);
			if(w <= 0)
			{
				ShowMessage("¬ведите корректный вес!");
				Edit7->Text = "";
			}
		}
		catch(...)
		{
			ShowMessage("¬ведите корректный вес!");
			Edit7->Text = "";
		}
		for(int i = 0; i < size; i++)
		{
			if(lst->Weight(i) == w)
			{
				Form1->Memo1->Lines->Add(ShowNode(i));
				count++;
			}
		}
		if(count == 0)ShowMessage("¬ таблице нет участников данной весовой категории!");
	}
	else if(Form1->Edit3->Text == "" && Form1->Edit7->Text = "" && Form1->Edit6 != "")
	{
		int h;
        try
		{
			h = StrToInt(Edit6->Text);
			if(h <= 0)
			{
				ShowMessage("¬ведите корректный рост!");
				Edit6->Text = "";
			}
		}
		catch(...)
		{
			ShowMessage("¬ведите корректный рост!");
			Edit6->Text = "";
		}

	}
	else ShowList();
};
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	size--;
	int num = Form1->ComboBox1->ItemIndex;
	lst->Delete(num);
	ShowList();
    Form1->ComboBox1->DeleteSelected();
	for (int i = 0; i < size; i++)
	{
		UnicodeString s = IntToStr(i + 1);
		Form1->ComboBox1->Items->Strings[i] = s;
	}
	if(size == 0)Lock();
}
//---------------------------------------------------------------------------

