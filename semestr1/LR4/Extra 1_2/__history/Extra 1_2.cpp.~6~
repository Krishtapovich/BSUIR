#pragma hdrstop
#pragma argsused

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

#include <stdio.h>
//Задана  матрицы  А  размерности  N*M  (N,M<=100).  Элементы  матрицы  целые  знаковые  числа.
//Построить динамическую  матрицу В, строки которой будут состоять только из  всех повторяющихся элементов соответствующей строки матрицы А.
//В  конце строк   нули не добавлять, а  сделать строки переменной длины. 
#include <conio.h>
#include <iostream>
#include <ctime>
using namespace std;
int _tmain() {
	srand(time(0));
	int n, m, x = 1;
	cout << "Enter number of rows of the array: ";
	cin >> n;
	cout << "Enter number of columns of the array: ";
	cin >> m;

	int** arr = new int* [n];
	for (int i = 0; i < n; i++) {
		arr[i] = new int[m];
	}

	int** rep = new int* [n];
	for (int i = 0; i < n; i++) {
		rep[i] = new int[m];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			rep[i][j] = -10;
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			arr[i][j] = rand()% 10 - 5;
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {			//вывод исходной матрицы
			cout << arr[i][j] <<'\t';
		}
		cout << endl << endl;
	}
	cout << endl << endl;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			for (int k = j + 1; k < m; k++) {		//запись повторющихся элементов в новую матрицу
				if (arr[i][j] == arr[i][k]) {
					rep[i][j] = arr[i][j];
				}
			}
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (rep[i][j] != -10) {
				for (int k = j + 1; k < m; k++)
				{
					if (rep[i][j] == rep[i][k])
					{												//вывод новой матрицы
						rep[i][k] = -10;
					}
				}
				cout << rep[i][j] <<'\t';
			}
		}
		cout << endl << endl;
	}

	for (int i = 0; i < n; i++) {
		delete[]arr[i];
	}
	delete[]arr;
	for (int i = 0; i < n; i++) {
		delete[]rep[i];
	}
	delete[]rep;
	getch();
	return 0;
}

